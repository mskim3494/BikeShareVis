{"version":3,"sources":["../../../src/webgl-utils/webgl-types.js"],"names":["DummyType","headlessTypes","global","WebGLRenderingContext","WebGLProgram","WebGLShader","WebGLBuffer","WebGLFramebuffer","WebGLRenderbuffer","WebGLTexture","WebGLUniformLocation","WebGLActiveInfo","WebGLShaderPrecisionFormat","webGLTypesAvailable","getWebGL2RenderingContext","WebGL2RenderingContextNotSupported","WebGL2RenderingContext","getImage","ImageNotSupported","Image"],"mappings":";;;;;;;AAQA;;AAGA;;;;;;IAEMA,S;;;;WAaFC,wCAAiBC,e;iCAVnBC,qB;IAAAA,qB,sCAAwBH,S;6BACxBI,Y;IAAAA,Y,kCAAeJ,S;4BACfK,W;IAAAA,W,iCAAcL,S;4BACdM,W;IAAAA,W,iCAAcN,S;iCACdO,gB;IAAAA,gB,sCAAmBP,S;iCACnBQ,iB;IAAAA,iB,sCAAoBR,S;6BACpBS,Y;IAAAA,Y,kCAAeT,S;iCACfU,oB;IAAAA,oB,sCAAuBV,S;gCACvBW,e;IAAAA,e,qCAAkBX,S;iCAClBY,0B;IAAAA,0B,sCAA6BZ,S;;;;;;;;;;;;AAGxB,IAAMa,sBACXV,0BAA0BH,SAA1B,IACAI,iBAAiBJ,SADjB,IAEAK,gBAAgBL,SAFhB,IAGAM,gBAAgBN,SAHhB,IAIAO,qBAAqBP,SAJrB,IAKAQ,sBAAsBR,SALtB,IAMAS,iBAAiBT,SANjB,IAOAU,yBAAyBV,SAPzB,IAQAW,oBAAoBX,SARpB,IASAY,+BAA+BZ,SAV1B,C,CAYP;AACA;AACA;;;;AACA,SAASc,yBAAT,GAAqC;AAAA,MAC7BC,kCAD6B;AAAA;AAAA;;AAEnC,SAAOb,gBAAOc,sBAAP,IAAiCD,kCAAxC;AACD,C,CAED;;;AACA,SAASE,QAAT,GAAoB;AAAA,MACZC,iBADY;AAAA;AAAA;;AAElB,SAAOhB,gBAAOiB,KAAP,IAAgBD,iBAAvB;AACD;;AAED,IAAMF,yBAAyBF,2BAA/B;;AACA,IAAMK,QAAQF,UAAd,C,CAEA","sourcesContent":["// WEBGL BUILT-IN TYPES\n// 1) Exports all WebGL constants as {GL}\n// 2) Enables app to \"import\" WebGL types\n//    - Importing these types makes them known to eslint etc.\n//    - Provides dummy types for WebGL2 when not available to streamline\n//      library code.\n//    - Exports types from headless gl when running under Node.js\n\nimport {global} from '../utils/globals';\n\n// Load headless gl dynamically, if available\nimport {headlessTypes} from './create-headless-context';\n\nclass DummyType {}\n\nconst {\n  WebGLRenderingContext = DummyType,\n  WebGLProgram = DummyType,\n  WebGLShader = DummyType,\n  WebGLBuffer = DummyType,\n  WebGLFramebuffer = DummyType,\n  WebGLRenderbuffer = DummyType,\n  WebGLTexture = DummyType,\n  WebGLUniformLocation = DummyType,\n  WebGLActiveInfo = DummyType,\n  WebGLShaderPrecisionFormat = DummyType\n} = headlessTypes || global;\n\nexport const webGLTypesAvailable =\n  WebGLRenderingContext !== DummyType &&\n  WebGLProgram !== DummyType &&\n  WebGLShader !== DummyType &&\n  WebGLBuffer !== DummyType &&\n  WebGLFramebuffer !== DummyType &&\n  WebGLRenderbuffer !== DummyType &&\n  WebGLTexture !== DummyType &&\n  WebGLUniformLocation !== DummyType &&\n  WebGLActiveInfo !== DummyType &&\n  WebGLShaderPrecisionFormat !== DummyType;\n\n// Ensures that WebGL2RenderingContext is defined in non-WebGL2 environments\n// so that apps can test their gl contexts with instanceof\n// E.g. if (gl instanceof WebGL2RenderingContext) { }\nfunction getWebGL2RenderingContext() {\n  class WebGL2RenderingContextNotSupported {}\n  return global.WebGL2RenderingContext || WebGL2RenderingContextNotSupported;\n}\n\n// Ensure that Image is defined under Node.js\nfunction getImage() {\n  class ImageNotSupported {}\n  return global.Image || ImageNotSupported;\n}\n\nconst WebGL2RenderingContext = getWebGL2RenderingContext();\nconst Image = getImage();\n\n// Export the standard WebGL types\nexport {\n  Image,\n\n  WebGLRenderingContext,\n  WebGLProgram,\n  WebGLShader,\n  WebGLBuffer,\n  WebGLFramebuffer,\n  WebGLRenderbuffer,\n  WebGLTexture,\n  WebGLUniformLocation,\n  WebGLActiveInfo,\n  WebGLShaderPrecisionFormat,\n\n  WebGL2RenderingContext\n};\n"],"file":"webgl-types.js"}
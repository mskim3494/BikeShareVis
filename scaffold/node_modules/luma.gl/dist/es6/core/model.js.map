{"version":3,"sources":["../../../src/core/model.js"],"names":["GL","Buffer","Program","checkUniformValues","isWebGL","getUniformsTable","areUniformsEqual","Query","getDrawMode","Object3D","MODULAR_SHADERS","assembleShaders","addModel","removeModel","logModel","getOverrides","log","formatValue","isObjectEmpty","assert","MSG_INSTANCED_PARAM_DEPRECATED","ERR_MODEL_PARAMS","LOG_DRAW_PRIORITY","DEPRECATED_PICKING_UNIFORMS","Model","constructor","gl","opts","init","vs","fs","modules","defines","moduleSettings","defaultUniforms","program","shaderCache","isInstanced","instanced","vertexCount","undefined","instanceCount","drawMode","uniforms","attributes","geometry","pickable","pick","render","onBeforeRender","onAfterRender","varyings","bufferMode","SEPARATE_ATTRIBS","timerQueryEnabled","_initializeProgram","Object","assign","setUniforms","getModuleUniforms","console","warn","buffers","samplers","userData","drawParams","dynamic","needsRedraw","setGeometry","setAttributes","Boolean","Number","isFinite","isSupported","timer","timeElapsedQuery","lastQueryReturned","stats","accumulatedFrameTime","averageFrameTime","profileFrameCount","delete","id","destroy","setNeedsRedraw","redraw","getNeedsRedraw","clearRedrawFlags","setDrawMode","setVertexCount","getVertexCount","setInstanceCount","getInstanceCount","getProgram","varyingMap","_createBuffersFromAttributeDescriptors","getAttributes","getUniforms","somethingChanged","key","updateModuleSettings","draw","parameters","settings","framebuffer","vertexArray","transformFeedback","deprecated","priority","message","resolvedUniforms","addViewUniforms","group","collapsed","setProgramState","_logAttributesAndUniforms","isIndexed","indexType","_timerQueryStart","_timerQueryEnd","unsetProgramState","groupEnd","use","setBuffers","checkAttributeBindings","unsetBuffers","camera","viewMatrix","modelMatrix","cameraUniforms","viewUniforms","getCoordinateUniforms","x","assembleResult","_checkForDeprecatedUniforms","forEach","uniform","beginTimeElapsedQuery","end","isResultAvailable","elapsedTime","getResult","lastFrameTime","attributeName","attribute","isGeneric","value","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","buffer","setData","data","setDataLayout","attributeTable","_getAttributesTable","header","table","unusedTable","unusedCount","undefinedOnly","count","attributeLocations","_attributeLocations","location","_getAttributeEntry","round","num","Math","type","size","verts","bytes","layout","length","BYTES_PER_ELEMENT","name","String","replace","isInteger","indexOf","isPickable","setPickable","getGeometry"],"mappings":"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","sourcesContent":["/* eslint quotes: [\"error\", \"single\", { \"allowTemplateLiterals\": true }]*/\n// A scenegraph object node\nimport {GL, Buffer, Program, checkUniformValues, isWebGL} from '../webgl';\nimport {getUniformsTable, areUniformsEqual} from '../webgl/uniforms';\nimport Query from '../webgl/query';\nimport {getDrawMode} from '../geometry/geometry';\nimport Object3D from '../core/object-3d';\nimport {MODULAR_SHADERS} from '../shadertools/shaders';\nimport {assembleShaders} from '../shadertools';\nimport {addModel, removeModel, logModel, getOverrides} from '../debug/seer-integration';\nimport {log, formatValue, isObjectEmpty} from '../utils';\nimport assert from '../utils/assert';\n\nconst MSG_INSTANCED_PARAM_DEPRECATED = `\\\nWarning: Model constructor: parameter \"instanced\" renamed to \"isInstanced\".\nThis will become a hard error in a future version of luma.gl.`;\n\nconst ERR_MODEL_PARAMS = 'Model needs drawMode and vertexCount';\n\nconst LOG_DRAW_PRIORITY = 2;\n\n// These old picking uniforms should be avoided and we should use picking module\n// and set uniforms using Model class 'updateModuleSettings()'\nconst DEPRECATED_PICKING_UNIFORMS = ['renderPickingBuffer', 'pickingEnabled'];\n\n// Model abstract O3D Class\nexport default class Model extends Object3D {\n  constructor(gl, opts = {}) {\n    super(opts);\n    assert(isWebGL(gl));\n    this.gl = gl;\n    this.init(opts);\n  }\n\n  /* eslint-disable max-statements  */\n  /* eslint-disable complexity  */\n  init({\n    vs = null,\n    fs = null,\n\n    // 1: Modular shaders\n    modules = null,\n    defines = {},\n    moduleSettings = {},\n\n    // 2: Legacy shaders\n    defaultUniforms,\n\n    // 3: Pre-created program\n    program = null,\n\n    shaderCache = null,\n\n    isInstanced = false, // Enables instanced rendering\n    instanced, // deprecated\n    vertexCount = undefined,\n    instanceCount = 0,\n\n    // Extra uniforms and attributes (beyond geometry, material, camera)\n    drawMode,\n    uniforms = {},\n    attributes = {},\n    geometry = null,\n\n    // Picking\n    pickable = true,\n    pick = null,\n    render = null,\n    onBeforeRender = () => {},\n    onAfterRender = () => {},\n\n    // TransformFeedback\n    varyings = null,\n    bufferMode = GL.SEPARATE_ATTRIBS,\n\n    // Other opts\n    timerQueryEnabled = false\n  } = {}) {\n    this._initializeProgram({\n      vs,\n      fs,\n      modules,\n      defines,\n      moduleSettings,\n      defaultUniforms,\n      program,\n      shaderCache,\n      varyings,\n      bufferMode\n    });\n\n    this.uniforms = {};\n\n    // Make sure we have some reasonable default uniforms in place\n    uniforms = Object.assign({}, this.program.defaultUniforms, uniforms);\n    this.setUniforms(uniforms);\n    // Get all default uniforms\n    this.setUniforms(this.getModuleUniforms());\n    // Get unforms for supplied parameters\n    this.setUniforms(this.getModuleUniforms(moduleSettings));\n\n    if (instanced) {\n      /* global console */\n      /* eslint-disable no-console */\n      console.warn(MSG_INSTANCED_PARAM_DEPRECATED);\n      isInstanced = isInstanced || instanced;\n    }\n\n    // TODO - remove?\n    this.buffers = {};\n    this.samplers = {};\n    this.userData = {};\n    this.drawParams = {};\n    this.dynamic = false;\n    this.needsRedraw = true;\n\n    // Attributes and buffers\n    if (geometry) {\n      this.setGeometry(geometry);\n    }\n\n    this.attributes = {};\n    this.setAttributes(attributes);\n\n    // geometry might have set drawMode and vertexCount\n    if (drawMode !== undefined) {\n      this.drawMode = getDrawMode(drawMode);\n    }\n    if (vertexCount !== undefined) {\n      this.vertexCount = vertexCount;\n    }\n    this.isInstanced = isInstanced;\n    this.instanceCount = instanceCount;\n\n    // picking options\n    this.pickable = Boolean(pickable);\n    this.pick = pick || (() => false);\n\n    this.onBeforeRender = onBeforeRender;\n    this.onAfterRender = onAfterRender;\n\n    // assert(program || program instanceof Program);\n    assert(this.drawMode !== undefined && Number.isFinite(this.vertexCount), ERR_MODEL_PARAMS);\n\n    this.timerQueryEnabled = timerQueryEnabled && Query.isSupported(this.gl, {timer: true});\n    this.timeElapsedQuery = undefined;\n    this.lastQueryReturned = true;\n\n    this.stats = {\n      accumulatedFrameTime: 0,\n      averageFrameTime: 0,\n      profileFrameCount: 0\n    };\n  }\n  /* eslint-enable max-statements */\n\n  delete() {\n    this.program.delete();\n    removeModel(this.id);\n  }\n\n  destroy() {\n    this.delete();\n  }\n\n  setNeedsRedraw(redraw = true) {\n    this.needsRedraw = redraw;\n    return this;\n  }\n\n  getNeedsRedraw({clearRedrawFlags = false} = {}) {\n    let redraw = false;\n    redraw = redraw || this.needsRedraw;\n    this.needsRedraw = this.needsRedraw && !clearRedrawFlags;\n    if (this.geometry) {\n      redraw = redraw || this.geometry.getNeedsRedraw({clearRedrawFlags});\n    }\n    return redraw;\n  }\n\n  setDrawMode(drawMode) {\n    this.drawMode = getDrawMode(drawMode);\n    return this;\n  }\n\n  getDrawMode() {\n    return this.drawMode;\n  }\n\n  setVertexCount(vertexCount) {\n    assert(Number.isFinite(vertexCount));\n    this.vertexCount = vertexCount;\n    return this;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  setInstanceCount(instanceCount) {\n    assert(Number.isFinite(instanceCount));\n    this.instanceCount = instanceCount;\n    return this;\n  }\n\n  getInstanceCount() {\n    return this.instanceCount;\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  get varyingMap() {\n    return this.program.varyingMap;\n  }\n\n  // TODO - just set attributes, don't hold on to geometry\n  setGeometry(geometry) {\n    this.geometry = geometry;\n    this.vertexCount = geometry.getVertexCount();\n    this.drawMode = geometry.drawMode;\n    this._createBuffersFromAttributeDescriptors(this.geometry.getAttributes());\n    this.setNeedsRedraw();\n    return this;\n  }\n\n  getAttributes() {\n    return this.attributes;\n  }\n\n  setAttributes(attributes = {}) {\n    // Reutrn early if no attributes to set.\n    if (isObjectEmpty(attributes)) {\n      return this;\n    }\n\n    Object.assign(this.attributes, attributes);\n    this._createBuffersFromAttributeDescriptors(attributes);\n    this.setNeedsRedraw();\n\n    return this;\n  }\n\n  getUniforms() {\n    return this.uniforms;\n  }\n\n  // TODO - should actually set the uniforms\n  setUniforms(uniforms = {}) {\n    // TODO: we are still setting these uniforms in deck.gl so we don't break any external\n    // application, these are marked deprecated in 5.0, remove them in deck.gl in 6.0.\n    // Disabling since it gets too noisy in console, these are documented as deprecated.\n    // this._checkForDeprecatedUniforms(uniforms);\n    let somethingChanged = false;\n    for (const key in uniforms) {\n      if (!areUniformsEqual(this.uniforms[key], uniforms[key])) {\n        somethingChanged = true;\n        break;\n      }\n    }\n\n    if (somethingChanged) {\n      checkUniformValues(uniforms, this.id);\n      Object.assign(this.uniforms, uniforms);\n      this.setNeedsRedraw();\n    }\n    return this;\n  }\n\n  // getModuleUniforms (already on object)\n\n  updateModuleSettings(opts) {\n    const uniforms = this.getModuleUniforms(opts);\n    return this.setUniforms(uniforms);\n  }\n\n  draw({\n    moduleSettings = null,\n    uniforms = {},\n    attributes = {},\n    samplers = {},\n    parameters = {},\n    settings,\n    framebuffer = null,\n    vertexArray = null,\n    transformFeedback = null\n  } = {}) {\n    if (settings) {\n      log.deprecated('settings', 'parameters')();\n      parameters = settings;\n    }\n\n    if (moduleSettings) {\n      this.updateModuleSettings(moduleSettings);\n    }\n\n    if (framebuffer) {\n      parameters = Object.assign(parameters, {framebuffer});\n    }\n\n    this.render(uniforms, attributes, samplers, transformFeedback, parameters, vertexArray);\n\n    if (framebuffer) {\n      framebuffer.log({priority: LOG_DRAW_PRIORITY, message: `Rendered to ${framebuffer.id}`});\n    }\n\n    return this;\n  }\n\n  /* eslint-disable max-params  */\n  render(\n    uniforms = {},\n    attributes = {},\n    samplers = {},\n    transformFeedback = null,\n    parameters = {},\n    vertexArray = null\n  ) {\n    addModel(this);\n\n    const resolvedUniforms = this.addViewUniforms(uniforms);\n    getOverrides(this.id, resolvedUniforms);\n\n    this.setUniforms(resolvedUniforms);\n    this.setAttributes(attributes);\n    Object.assign(this.samplers, samplers);\n\n    log.group(LOG_DRAW_PRIORITY,\n      `>>> RENDERING MODEL ${this.id}`, {collapsed: log.priority <= 2})();\n\n    this.setProgramState({vertexArray});\n\n    this._logAttributesAndUniforms(2, resolvedUniforms);\n\n    this.onBeforeRender();\n\n    const drawParams = this.drawParams;\n    if (drawParams.isInstanced && !this.isInstanced) {\n      log.warn('Found instanced attributes on non-instanced model')();\n    }\n    const {isIndexed, indexType} = drawParams;\n    const {isInstanced, instanceCount} = this;\n\n    this._timerQueryStart();\n\n    this.program.draw({\n      parameters,\n      drawMode: this.getDrawMode(),\n      vertexCount: this.getVertexCount(),\n      vertexArray,\n      transformFeedback,\n      isIndexed,\n      indexType,\n      isInstanced,\n      instanceCount\n    });\n\n    this._timerQueryEnd();\n\n    this.onAfterRender();\n\n    this.unsetProgramState();\n\n    this.setNeedsRedraw(false);\n\n    log.groupEnd(LOG_DRAW_PRIORITY, `>>> RENDERING MODEL ${this.id}`)();\n\n    return this;\n  }\n  /* eslint-enable max-params  */\n\n  setProgramState({vertexArray = null} = {}) {\n    const {program} = this;\n    program.use();\n    this.drawParams = {};\n    program.setBuffers(this.buffers, {drawParams: this.drawParams});\n    program.checkAttributeBindings({vertexArray});\n    program.setUniforms(this.uniforms, this.samplers);\n    return this;\n  }\n\n  unsetProgramState() {\n    // Ensures all vertex attributes are disabled and ELEMENT_ARRAY_BUFFER\n    // is unbound\n    this.program.unsetBuffers();\n    return this;\n  }\n\n  // DEPRECATED METHODS\n\n  // TODO - uniform names are too strongly linked camera <=> default shaders\n  // At least all special handling is collected here.\n  addViewUniforms(uniforms) {\n    // TODO - special treatment of these parameters should be removed\n    const {camera, viewMatrix, modelMatrix} = uniforms;\n    // Camera exposes uniforms that can be used directly in shaders\n    const cameraUniforms = camera ? camera.getUniforms() : {};\n\n    const viewUniforms = viewMatrix ?\n      this.getCoordinateUniforms(viewMatrix, modelMatrix) : {};\n\n    return Object.assign({}, uniforms, cameraUniforms, viewUniforms);\n  }\n\n  // PRIVATE METHODS\n\n  _initializeProgram({\n    vs,\n    fs,\n    modules,\n    defines,\n    moduleSettings,\n    defaultUniforms,\n    program,\n    shaderCache,\n    varyings,\n    bufferMode\n  }) {\n\n    this.getModuleUniforms = x => {};\n\n    if (!program) {\n      // Assign default shaders if none are provided\n      if (!vs) {\n        vs = MODULAR_SHADERS.vs;\n      }\n      if (!fs) {\n        fs = MODULAR_SHADERS.fs;\n      }\n\n      const assembleResult = assembleShaders(this.gl, {vs, fs, modules, defines});\n      ({vs, fs} = assembleResult);\n\n      if (shaderCache) {\n        program = shaderCache.getProgram(this.gl, {vs, fs, id: this.id});\n      } else {\n        program = new Program(this.gl, {vs, fs, varyings, bufferMode});\n      }\n\n      const {getUniforms} = assembleResult;\n      this.getModuleUniforms = getUniforms || (x => {});\n    }\n\n    this.program = program;\n    assert(this.program instanceof Program, 'Model needs a program');\n  }\n  /* eslint-enable complexity */\n\n  _checkForDeprecatedUniforms(uniforms) {\n    // deprecated picking uniforms\n    DEPRECATED_PICKING_UNIFORMS.forEach((uniform) => {\n      if (uniform in uniforms) {\n        log.deprecated(uniform,\n          'use picking shader module and Model class updateModuleSettings()')();\n      }\n    });\n  }\n\n  _timerQueryStart() {\n    if (this.timerQueryEnabled === true) {\n      if (!this.timeElapsedQuery) {\n        this.timeElapsedQuery = new Query(this.gl);\n      }\n      if (this.lastQueryReturned) {\n        this.lastQueryReturned = false;\n        this.timeElapsedQuery.beginTimeElapsedQuery();\n      }\n    }\n  }\n\n  _timerQueryEnd() {\n    if (this.timerQueryEnabled === true) {\n      this.timeElapsedQuery.end();\n      // TODO: Skip results if 'gl.getParameter(this.ext.GPU_DISJOINT_EXT)' returns false\n      // should this be incorporated into Query object?\n      if (this.timeElapsedQuery.isResultAvailable()) {\n        this.lastQueryReturned = true;\n        const elapsedTime = this.timeElapsedQuery.getResult();\n\n        // Update stats (e.g. for seer)\n        this.stats.lastFrameTime = elapsedTime;\n        this.stats.accumulatedFrameTime += elapsedTime;\n        this.stats.profileFrameCount++;\n        this.stats.averageFrameTime =\n          this.stats.accumulatedFrameTime / this.stats.profileFrameCount;\n\n        // Log stats\n        log.log(LOG_DRAW_PRIORITY, `\\\nGPU time ${this.program.id}: ${this.stats.lastFrameTime}ms \\\naverage ${this.stats.averageFrameTime}ms \\\naccumulated: ${this.stats.accumulatedFrameTime}ms \\\ncount: ${this.stats.profileFrameCount}`\n        )();\n      }\n    }\n  }\n\n  // Makes sure buffers are created for all attributes\n  // and that the program is updated with those buffers\n  // TODO - do we need the separation between \"attributes\" and \"buffers\"\n  // couldn't apps just create buffers directly?\n  _createBuffersFromAttributeDescriptors(attributes) {\n    const {program: {gl}} = this;\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n\n      if (attribute instanceof Buffer) {\n        this.buffers[attributeName] = attribute;\n      } else if (attribute.isGeneric) {\n        this.buffers[attributeName] = attribute.value;\n      } else {\n        // Autocreate a buffer\n        this.buffers[attributeName] =\n          this.buffers[attributeName] || new Buffer(gl, {\n            target: attribute.isIndexed ? GL.ELEMENT_ARRAY_BUFFER : GL.ARRAY_BUFFER\n          });\n\n        const buffer = this.buffers[attributeName];\n        buffer\n          .setData({data: attribute.value})\n          .setDataLayout(attribute);\n      }\n    }\n\n    return this;\n  }\n\n  _logAttributesAndUniforms(priority, uniforms = {}) {\n    if (log.priority >= priority) {\n      const attributeTable = this._getAttributesTable({\n        header: `${this.id} attributes`,\n        program: this.program,\n        attributes: Object.assign(\n          {},\n          this.geometry && this.geometry.attributes,\n          this.attributes\n        )\n      });\n      log.table(priority, attributeTable)();\n\n      const {table, unusedTable, unusedCount} = getUniformsTable({\n        header: `${this.id} uniforms`,\n        program: this.program,\n        uniforms: Object.assign({}, this.uniforms, uniforms)\n      });\n\n      log.table(priority, table)();\n      log.log(priority, `${unusedCount || 'No'} unused uniforms `, unusedTable)();\n    } else {\n      // Always log missing uniforms\n      const {table, count} = getUniformsTable({\n        header: `${this.id} uniforms`,\n        program: this.program,\n        uniforms: Object.assign({}, this.uniforms, uniforms),\n        undefinedOnly: true\n      });\n      if (count > 0) {\n        log.table(priority, table)();\n      }\n    }\n\n    logModel(this, uniforms);\n  }\n\n  // Todo move to attributes manager\n  _getAttributesTable({\n    attributes,\n    header = 'Attributes',\n    instanced,\n    program\n  } = {}) {\n    assert(program);\n    const attributeLocations = program._attributeLocations;\n    const table = {}; // {[header]: {}};\n\n    // Add used attributes\n    for (const attributeName in attributeLocations) {\n      const attribute = attributes[attributeName];\n      const location = attributeLocations[attributeName];\n      table[attributeName] = this._getAttributeEntry(attribute, location, header);\n    }\n\n    // Add any unused attributes\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      if (!table[attributeName]) {\n        table[attributeName] = this._getAttributeEntry(attribute, null, header);\n      }\n    }\n\n    return table;\n  }\n\n  _getAttributeEntry(attribute, location, header) {\n    const round = num => Math.round(num * 10) / 10;\n\n    let type = 'NOT PROVIDED';\n    let instanced = 0;\n    let size = 'N/A';\n    let verts = 'N/A';\n    let bytes = 'N/A';\n    let value = 'N/A';\n\n    if (attribute && location === null) {\n      location = attribute.isIndexed ? 'ELEMENT_ARRAY_BUFFER' : 'NOT USED';\n    }\n\n    if (attribute instanceof Buffer) {\n      const buffer = attribute;\n      type = buffer.layout.type;\n      instanced = buffer.layout.instanced;\n      size = buffer.layout.size;\n      verts = round(buffer.data.length / buffer.layout.size);\n      bytes = buffer.data.length * buffer.data.BYTES_PER_ELEMENT;\n    } else if (attribute) {\n      type = attribute.value.constructor.name;\n      instanced = attribute.instanced;\n      size = attribute.size;\n      verts = round(attribute.value.length / attribute.size);\n      bytes = attribute.value.length * attribute.value.BYTES_PER_ELEMENT;\n      value = attribute.value;\n    }\n\n    // Generate a type name by dropping Array from Float32Array etc.\n    type = String(type).replace('Array', '');\n    // Look for 'nt' to detect integer types, e.g. Int32Array, Uint32Array\n    const isInteger = type.indexOf('nt') !== -1;\n\n    return {\n      [header]: formatValue(value, {size, isInteger}),\n      'Memory Size and Layout':\n        `${instanced ? 'I ' : 'P '} ${verts} (x${size}=${bytes}bytes ${type}) loc=${location}`\n    };\n  }\n\n  // DEPRECATED / REMOVED\n  isPickable() {\n    return this.pickable;\n  }\n\n  setPickable(pickable = true) {\n    this.pickable = Boolean(pickable);\n    return this;\n  }\n\n  getGeometry() {\n    return this.geometry;\n  }\n}\n"],"file":"model.js"}
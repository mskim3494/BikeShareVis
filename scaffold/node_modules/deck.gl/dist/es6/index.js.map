{"version":3,"sources":["../../src/index.js"],"names":["experimental","COORDINATE_SYSTEM","Deck","Layer","CompositeLayer","View","MapView","FirstPersonView","ThirdPersonView","OrbitView","PerspectiveView","OrthographicView","Viewport","WebMercatorViewport","PerspectiveViewport","OrthographicViewport","MapController","AttributeManager","project","project64","lighting","LayerManager","CoreExperimental","OrbitController","FirstPersonController","ViewportControls","ViewState","FirstPersonState","OrbitState","MapState","FirstPersonViewport","OrbitViewport","ThirdPersonViewport","TRANSITION_EVENTS","LinearInterpolator","ViewportFlyToInterpolator","EffectManager","Effect","Object","assign","Controller","TransitionManager","extractViewState","BinSorter","linearScale","getLinearScale","quantizeScale","getQuantizeScale","clamp","defaultColorRange","log","get","count","flatten","countVertices","flattenVertices","fillArray","enable64bitSupport","fp64ify","fp64LowPart","ReflectionEffect","ArcLayer","IconLayer","LineLayer","PointCloudLayer","ScatterplotLayer","ScreenGridLayer","GridLayer","GridCellLayer","HexagonLayer","HexagonCellLayer","PathLayer","PolygonLayer","GeoJsonLayer","TextLayer","default","DeckGL","ViewportController"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-len */\n\nconst experimental = {};\n\n//\n// CORE LIBRARY\n//\n\nexport {\n  // CONSTANTS\n  COORDINATE_SYSTEM,\n  // Main class\n  Deck,\n  // Base Layers\n  Layer,\n  CompositeLayer,\n  // Views\n  View,\n  MapView,\n  FirstPersonView,\n  ThirdPersonView,\n  OrbitView,\n  PerspectiveView,\n  OrthographicView,\n  // Viewports\n  Viewport,\n  WebMercatorViewport,\n  PerspectiveViewport,\n  OrthographicViewport,\n  // Controllers\n  MapController,\n  // For custom layers\n  AttributeManager,\n  // Shader modules\n  project,\n  project64,\n  lighting,\n  // Internal classes\n  LayerManager\n} from '@deck.gl/core';\n\n// EXPERIMENTAL CORE LIB CLASSES (May change in minor version bumps, use at your own risk)\nimport {experimental as CoreExperimental} from '@deck.gl/core';\n\nconst {\n  // Controllers\n  OrbitController,\n  FirstPersonController,\n  ViewportControls,\n\n  // View States\n  ViewState,\n  FirstPersonState,\n  OrbitState,\n  MapState,\n\n  // Viewports\n  FirstPersonViewport,\n  OrbitViewport,\n  ThirdPersonViewport,\n\n  // Transition bindings\n  TRANSITION_EVENTS,\n  LinearInterpolator,\n  ViewportFlyToInterpolator,\n\n  EffectManager,\n  Effect\n} = CoreExperimental;\n\nObject.assign(experimental, {\n  // Controller helper classes\n  OrbitController,\n  FirstPersonController,\n  ViewportControls,\n  Controller: ViewportControls,\n\n  // Unfinished controller/viewport classes\n  ViewState,\n  FirstPersonState,\n  OrbitState,\n  MapState,\n\n  // Experimental viewports\n  FirstPersonViewport,\n  OrbitViewport,\n  ThirdPersonViewport,\n\n  // Transition bindings\n  TRANSITION_EVENTS,\n  LinearInterpolator,\n  ViewportFlyToInterpolator,\n\n  // Effects base classes\n  EffectManager,\n  Effect\n});\n\n// Experimental Data Accessor Helpers\n// INTERNAL - TODO remove from experimental exports\nconst {\n  // For react module\n  TransitionManager,\n  extractViewState,\n\n  // For layers\n  BinSorter,\n  linearScale,\n  getLinearScale,\n  quantizeScale,\n  getQuantizeScale,\n  clamp,\n  defaultColorRange,\n\n  log,\n\n  get,\n  count,\n\n  flatten,\n  countVertices,\n  flattenVertices,\n  fillArray,\n\n  enable64bitSupport,\n  fp64ify,\n  fp64LowPart,\n\n  ReflectionEffect\n} = CoreExperimental;\n\nObject.assign(experimental, {\n  // For react module\n  TransitionManager,\n  extractViewState,\n\n  // For layers\n  BinSorter,\n  linearScale,\n  getLinearScale,\n  quantizeScale,\n  getQuantizeScale,\n  clamp,\n  defaultColorRange,\n\n  log,\n\n  get,\n  count,\n\n  flatten,\n  countVertices,\n  flattenVertices,\n  fillArray,\n\n  enable64bitSupport,\n  fp64ify,\n  fp64LowPart,\n\n  ReflectionEffect\n});\n\n//\n// CORE LAYERS PACKAGE\n//\n\nexport {\n  ArcLayer,\n  IconLayer,\n  LineLayer,\n  PointCloudLayer,\n  ScatterplotLayer,\n  ScreenGridLayer,\n  GridLayer,\n  GridCellLayer,\n  HexagonLayer,\n  HexagonCellLayer,\n  PathLayer,\n  PolygonLayer,\n  GeoJsonLayer,\n  TextLayer\n} from '@deck.gl/core';\n\n//\n// REACT BINDINGS PACKAGE\n//\n\nexport {default, DeckGL} from '@deck.gl/react';\n\nimport {\n  ViewportController // TODO - merge with deck.gl?\n} from '@deck.gl/react';\n\nObject.assign(experimental, {\n  ViewportController\n});\n\n//\n// EXPERIMENTAL EXPORTS\n//\n\nexport {experimental};\n"],"file":"index.js"}
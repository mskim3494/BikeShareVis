{"version":3,"sources":["../../../../src/core/views/orbit-view.js"],"names":["OrbitView","boundingBox","fov","halfMaxSide","Math","max","distance","tan","PI","props","Object","assign","type","OrbitViewport","View","displayName"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;IAEqBA,S;;;;;;;AACnB;AACA;sCACuC;AAAA,UAAnBC,WAAmB,QAAnBA,WAAmB;AAAA,UAANC,GAAM,QAANA,GAAM;AACrC,UAAMC,cAAcC,KAAKC,GAAL,CAASJ,YAAY,CAAZ,CAAT,EAAyBA,YAAY,CAAZ,CAAzB,EAAyCA,YAAY,CAAZ,CAAzC,IAA2D,CAA/E;AACA,UAAMK,WAAWH,cAAcC,KAAKG,GAAL,CAASL,MAAM,GAAN,GAAYE,KAAKI,EAAjB,GAAsB,CAA/B,CAA/B;AACA,aAAOF,QAAP;AACD;;;AAED,qBAAYG,KAAZ,EAAmB;AAAA;;AAAA,iHAEfC,OAAOC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,EAAyB;AACvBG,YAAMC;AADiB,KAAzB,CAFe;AAMlB;;;EAfoCC,a;;;AAkBvCd,UAAUe,WAAV,GAAwB,WAAxB","sourcesContent":["import View from './view';\nimport OrbitViewport from '../viewports/orbit-viewport';\n\nexport default class OrbitView extends View {\n  // Get camera `distance` to make view fit a box centered at lookat position in the viewport.\n  // @param {Array} boundingBox - [sizeX, sizeY, sizeZ]], defines the dimensions of bounding box\n  static getDistance({boundingBox, fov}) {\n    const halfMaxSide = Math.max(boundingBox[0], boundingBox[1], boundingBox[2]) / 2;\n    const distance = halfMaxSide / Math.tan(fov / 180 * Math.PI / 2);\n    return distance;\n  }\n\n  constructor(props) {\n    super(\n      Object.assign({}, props, {\n        type: OrbitViewport\n      })\n    );\n  }\n}\n\nOrbitView.displayName = 'OrbitView';\n"],"file":"orbit-view.js"}
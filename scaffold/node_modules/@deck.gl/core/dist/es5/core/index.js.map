{"version":3,"sources":["../../../src/core/index.js"],"names":["experimental","OrbitController","ViewportControls","MapControls","FirstPersonState","OrbitState","MapState","FirstPersonViewport","ThirdPersonViewport","OrbitViewport","EffectManager","Effect","TRANSITION_EVENTS","LinearInterpolator","ViewportFlyToInterpolator","TransitionManager","extractViewState","BinSorter","linearScale","getLinearScale","quantizeScale","getQuantizeScale","clamp","defaultColorRange","log","get","count","flatten","countVertices","flattenVertices","fillArray","enable64bitSupport","fp64ify","fp64LowPart","ReflectionEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAGA;;AAGA;;AAGA;;AAEA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AAKA;;AAGA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAGA;;AAEA;;AAGA;;;;;;AA1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AAGA;AAGA;AAGA;AAQA;AAMA;AAKA;AACA;AAUA;AAGA;AAcA;AAIA;AAKA;AAKA;AAWA;AAMO,IAAMA,eAAe;AAC1BC,2CAD0B;AAG1BC,6CAH0B;AAI1BC,mCAJ0B;AAM1BC,6CAN0B;AAO1BC,iCAP0B;AAQ1BC,6BAR0B;AAU1BC,mDAV0B;AAW1BC,mDAX0B;AAY1BC,uCAZ0B;AAc1BC,uCAd0B;AAe1BC,yBAf0B;AAiB1B;AACAC,yDAlB0B;AAmB1BC,iDAnB0B;AAoB1BC,+DApB0B;AAsB1B;AACAC,+CAvB0B;AAwB1BC,qDAxB0B;AA0B1B;AACA;AAEA;AACAC,+BA9B0B;AA+B1BC,sCA/B0B;AAgC1BC,4CAhC0B;AAiC1BC,0CAjC0B;AAkC1BC,gDAlC0B;AAmC1BC,0BAnC0B;AAoC1BC,kDApC0B;AAsC1BC,mBAtC0B;AAwC1BC,eAxC0B;AAyC1BC,qBAzC0B;AA2C1BC,2BA3C0B;AA4C1BC,uCA5C0B;AA6C1BC,2CA7C0B;AA8C1BC,+BA9C0B;AAgD1BC,4CAhD0B;AAiD1BC,sBAjD0B;AAkD1BC,8BAlD0B;AAoD1BC;AApD0B,CAArB","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-len */\n\n// Intialize globals, check version\nimport './lib/init';\n\n// Import shaderlib to make sure shader modules are initialized\nimport './shaderlib';\n\n// Core Library\nexport {COORDINATE_SYSTEM} from './lib/constants';\n\n// Experimental Pure JS (non-React) bindings\nexport {default as Deck} from './lib/deck';\n\nexport {default as LayerManager} from './lib/layer-manager';\nexport {default as AttributeManager} from './lib/attribute-manager';\nexport {default as Layer} from './lib/layer';\nexport {default as CompositeLayer} from './lib/composite-layer';\n\n// Viewports\nexport {default as Viewport} from './viewports/viewport';\nexport {default as WebMercatorViewport} from './viewports/web-mercator-viewport';\nexport {default as PerspectiveViewport} from './viewports/perspective-viewport';\nexport {default as OrthographicViewport} from './viewports/orthographic-viewport';\n\n// Shader modules\nexport {default as project} from './shaderlib/project/project';\nexport {default as project64} from './shaderlib/project64/project64';\nexport {default as lighting} from './shaderlib/lighting/lighting';\n\n// EXPERIMENTAL EXPORTS\n// Experimental Features (May change in minor version bumps, use at your own risk)\n\nexport {default as View} from './views/view';\nexport {default as MapView} from './views/map-view';\nexport {default as FirstPersonView} from './views/first-person-view';\nexport {default as ThirdPersonView} from './views/third-person-view';\nexport {default as OrbitView} from './views/orbit-view';\nexport {default as PerspectiveView} from './views/perspective-view';\nexport {default as OrthographicView} from './views/orthographic-view';\n\n// Controllers\nexport {default as MapController} from './controllers/map-controller';\n\n// Experimental Controllers\nimport {default as OrbitController} from './controllers/orbit-controller';\n\nimport {default as FirstPersonState} from './controllers/first-person-state';\nimport {default as OrbitState} from './controllers/orbit-state';\nimport {default as MapState} from './controllers/map-state';\n\nimport {default as ViewportControls} from './controllers/viewport-controls';\nimport {default as MapControls} from './controllers/map-controls';\n\nimport {default as FirstPersonViewport} from './viewports/first-person-viewport';\nimport {default as ThirdPersonViewport} from './viewports/third-person-viewport';\nimport {default as OrbitViewport} from './viewports/orbit-viewport';\n\n// Experimental Effects (non-React) bindings\nimport {default as EffectManager} from './experimental/lib/effect-manager';\nimport {default as Effect} from './experimental/lib/effect';\n\n// Eperimental Transitions\nimport {TRANSITION_EVENTS} from './lib/transition-manager';\nimport {default as LinearInterpolator} from './transitions/linear-interpolator';\nimport {default as ViewportFlyToInterpolator} from './transitions/viewport-fly-to-interpolator';\n\n// INTERNAL EXPORTS\n\nimport TransitionManager from './lib/transition-manager';\nimport {extractViewState} from './transitions/transition-utils';\n\n// Layer utilities\nimport {default as log} from './utils/log';\nimport {get} from './utils/get';\nimport {count} from './utils/count';\n\nimport {default as BinSorter} from './utils/bin-sorter';\nimport {defaultColorRange} from './utils/color-utils';\nimport {linearScale, getLinearScale, quantizeScale, getQuantizeScale} from './utils/scale-utils';\nimport {clamp} from './utils/scale-utils';\n\nimport {flatten, countVertices, flattenVertices, fillArray} from './utils/flatten';\n// TODO - just expose as layer methods instead?\nimport {enable64bitSupport} from './utils/fp64';\nimport {fp64ify, fp64LowPart} from './utils/fp64';\n\nimport ReflectionEffect from './experimental/reflection-effect/reflection-effect';\n\nexport const experimental = {\n  OrbitController,\n\n  ViewportControls,\n  MapControls,\n\n  FirstPersonState,\n  OrbitState,\n  MapState,\n\n  FirstPersonViewport,\n  ThirdPersonViewport,\n  OrbitViewport,\n\n  EffectManager,\n  Effect,\n\n  // Transitions\n  TRANSITION_EVENTS,\n  LinearInterpolator,\n  ViewportFlyToInterpolator,\n\n  // For react module\n  TransitionManager,\n  extractViewState,\n\n  // TODO make this an internal export to set it apart from experimental\n  // export const internal\n\n  // For layers\n  BinSorter,\n  linearScale,\n  getLinearScale,\n  quantizeScale,\n  getQuantizeScale,\n  clamp,\n  defaultColorRange,\n\n  log,\n\n  get,\n  count,\n\n  flatten,\n  countVertices,\n  flattenVertices,\n  fillArray,\n\n  enable64bitSupport,\n  fp64ify,\n  fp64LowPart,\n\n  ReflectionEffect\n};\n"],"file":"index.js"}
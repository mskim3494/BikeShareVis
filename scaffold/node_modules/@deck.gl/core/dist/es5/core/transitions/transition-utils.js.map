{"version":3,"sources":["../../../../src/core/transitions/transition-utils.js"],"names":["VIEWPORT_PROPS","WRAPPED_ANGULAR_PROPS","longitude","bearing","isValid","prop","Number","isFinite","Array","isArray","isWrappedAngularProp","propName","getEndValueByShortestPath","startValue","endValue","Math","abs","extractViewState","props","viewport","forEach","value","key"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,iBAAiB,CACrB,OADqB,EAErB,QAFqB,EAGrB,WAHqB,EAIrB,UAJqB,EAKrB,MALqB,EAMrB,SANqB,EAOrB,OAPqB,EAQrB,UARqB,CAAvB;AAWA,IAAMC,wBAAwB;AAC5BC,aAAW,CADiB;AAE5BC,WAAS;AAFmB,CAA9B;;AAKO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAOC,OAAOC,QAAP,CAAgBF,IAAhB,KAAyBG,MAAMC,OAAN,CAAcJ,IAAd,CAAhC;AACD;;AAED,SAASK,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,SAAOV,sBAAsBU,QAAtB,CAAP;AACD;;AAEM,SAASC,yBAAT,CAAmCD,QAAnC,EAA6CE,UAA7C,EAAyDC,QAAzD,EAAmE;AACxE,MAAIJ,qBAAqBC,QAArB,KAAkCI,KAAKC,GAAL,CAASF,WAAWD,UAApB,IAAkC,GAAxE,EAA6E;AAC3EC,eAAWA,WAAW,CAAX,GAAeA,WAAW,GAA1B,GAAgCA,WAAW,GAAtD;AACD;;AACD,SAAOA,QAAP;AACD,C,CAED;;;AACO,SAASG,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,MAAMC,WAAW,EAAjB;AACAnB,iBAAeoB,OAAf,CAAuB,eAAO;AAC5B,QAAMC,QAAQH,MAAMI,GAAN,CAAd;;AACA,QAAIlB,QAAQiB,KAAR,CAAJ,EAAoB;AAClBF,eAASG,GAAT,IAAgBD,KAAhB,CADkB,CAElB;AACA;;AACA,UAAIX,qBAAqBY,GAArB,CAAJ,EAA+B;AAC7BH,iBAASG,GAAT,IAAgB,oBAAID,QAAQ,GAAZ,EAAiB,GAAjB,IAAwB,GAAxC;AACD;AACF;AACF,GAVD;AAWA,SAAOF,QAAP;AACD","sourcesContent":["import {mod} from '../utils/math-utils';\n\nconst VIEWPORT_PROPS = [\n  'width',\n  'height',\n  'longitude',\n  'latitude',\n  'zoom',\n  'bearing',\n  'pitch',\n  'position'\n];\n\nconst WRAPPED_ANGULAR_PROPS = {\n  longitude: 1,\n  bearing: 1\n};\n\nexport function isValid(prop) {\n  return Number.isFinite(prop) || Array.isArray(prop);\n}\n\nfunction isWrappedAngularProp(propName) {\n  return WRAPPED_ANGULAR_PROPS[propName];\n}\n\nexport function getEndValueByShortestPath(propName, startValue, endValue) {\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\n  }\n  return endValue;\n}\n\n// TODO/xiaoji: This should be merged with the controller's prop constraint system\nexport function extractViewState(props) {\n  const viewport = {};\n  VIEWPORT_PROPS.forEach(key => {\n    const value = props[key];\n    if (isValid(value)) {\n      viewport[key] = value;\n      // Normalize longitude and bearing into [-180, 180) range\n      // This gurantees the props are in same range when they are interpolated.\n      if (isWrappedAngularProp(key)) {\n        viewport[key] = mod(value + 180, 360) - 180;\n      }\n    }\n  });\n  return viewport;\n}\n"],"file":"transition-utils.js"}
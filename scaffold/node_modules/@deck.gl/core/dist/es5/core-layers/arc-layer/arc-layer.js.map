{"version":3,"sources":["../../../../src/core-layers/arc-layer/arc-layer.js"],"names":["fp64LowPart","experimental","enable64bitSupport","DEFAULT_COLOR","defaultProps","strokeWidth","fp64","getSourcePosition","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","color","getTargetColor","ArcLayer","props","vs","vs64","fs","modules","attributeManager","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","update","calculateInstancePositions","instanceSourceColors","type","GL","UNSIGNED_BYTE","calculateInstanceSourceColors","instanceTargetColors","calculateInstanceTargetColors","oldProps","changeFlags","invalidateAll","coordinateSystem","COORDINATE_SYSTEM","LNGLAT","instancePositions64Low","calculateInstancePositions64Low","remove","gl","context","state","model","delete","setState","_getModel","updateAttribute","uniforms","render","Object","assign","positions","NUM_SEGMENTS","i","concat","Model","getShaders","id","geometry","Geometry","drawMode","TRIANGLE_STRIP","attributes","Float32Array","isInstanced","shaderCache","setUniforms","numSegments","attribute","data","value","object","isNaN","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {COORDINATE_SYSTEM, Layer, experimental} from '../../core';\nconst {fp64LowPart, enable64bitSupport} = experimental;\n\nimport {GL, Model, Geometry} from 'luma.gl';\n\nimport vs from './arc-layer-vertex.glsl';\nimport vs64 from './arc-layer-vertex-64.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  strokeWidth: 1,\n  fp64: false,\n\n  getSourcePosition: x => x.sourcePosition,\n  getTargetPosition: x => x.targetPosition,\n  getSourceColor: x => x.color || DEFAULT_COLOR,\n  getTargetColor: x => x.color || DEFAULT_COLOR\n};\n\nexport default class ArcLayer extends Layer {\n  getShaders() {\n    return enable64bitSupport(this.props)\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 4,\n        transition: true,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions\n      },\n      instanceSourceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getSourceColor',\n        update: this.calculateInstanceSourceColors\n      },\n      instanceTargetColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getTargetColor',\n        update: this.calculateInstanceTargetColors\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateAttribute({props, oldProps, changeFlags}) {\n    if (props.fp64 !== oldProps.fp64) {\n      const attributeManager = this.getAttributeManager();\n      attributeManager.invalidateAll();\n\n      if (props.fp64 && props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n        attributeManager.addInstanced({\n          instancePositions64Low: {\n            size: 4,\n            accessor: ['getSourcePosition', 'getTargetPosition'],\n            update: this.calculateInstancePositions64Low\n          }\n        });\n      } else {\n        attributeManager.remove(['instancePositions64Low']);\n      }\n    }\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    // Re-generate model if geometry changed\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n    }\n    this.updateAttribute({props, oldProps, changeFlags});\n  }\n\n  draw({uniforms}) {\n    const {strokeWidth} = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        strokeWidth\n      })\n    );\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n\n  calculateInstancePositions(attribute) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = sourcePosition[0];\n      value[i + 1] = sourcePosition[1];\n      value[i + 2] = targetPosition[0];\n      value[i + 3] = targetPosition[1];\n      i += size;\n    }\n  }\n\n  calculateInstancePositions64Low(attribute) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = fp64LowPart(sourcePosition[0]);\n      value[i + 1] = fp64LowPart(sourcePosition[1]);\n      value[i + 2] = fp64LowPart(targetPosition[0]);\n      value[i + 3] = fp64LowPart(targetPosition[1]);\n      i += size;\n    }\n  }\n\n  calculateInstanceSourceColors(attribute) {\n    const {data, getSourceColor} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const color = getSourceColor(object);\n      value[i + 0] = color[0];\n      value[i + 1] = color[1];\n      value[i + 2] = color[2];\n      value[i + 3] = isNaN(color[3]) ? 255 : color[3];\n      i += size;\n    }\n  }\n\n  calculateInstanceTargetColors(attribute) {\n    const {data, getTargetColor} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const color = getTargetColor(object);\n      value[i + 0] = color[0];\n      value[i + 1] = color[1];\n      value[i + 2] = color[2];\n      value[i + 3] = isNaN(color[3]) ? 255 : color[3];\n      i += size;\n    }\n  }\n}\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n"],"file":"arc-layer.js"}
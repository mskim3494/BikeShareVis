{"version":3,"sources":["../../../../src/core-layers/text-layer/text-layer.js"],"names":["CompositeLayer","experimental","log","MultiIconLayer","makeFontAtlas","DEFAULT_CHAR_SET","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_FONT_FAMILY","DEFAULT_COLOR","MISSING_CHAR_WIDTH","defaultProps","fp64","sizeScale","fontFamily","characterSet","getText","x","text","getPosition","position","getColor","color","getSize","size","getAngle","angle","getTextAnchor","textAnchor","getAlignmentBaseline","alignmentBaseline","getPixelOffset","offset","pixelOffset","TextLayer","updateState","props","oldProps","changeFlags","fontChanged","updateFontAtlas","dataChanged","updateTriggersChanged","all","transformStringToLetters","gl","context","scale","mapping","texture","setState","iconAtlas","iconMapping","getPickingInfo","info","Object","assign","object","data","state","length","transformedData","forEach","val","letters","Array","from","offsets","offsetLeft","letter","i","datum","index","len","frame","width","warn","push","getLetterOffset","getTextLength","getAnchorXFromTextAnchor","hasOwnProperty","Error","getAnchorYFromAlignmentBaseline","renderLayers","updateTriggers","getSubLayerProps","id","getIcon","d","getShiftInQueue","getLengthOfQueue","getAnchorX","getAnchorY","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, experimental} from '../../core';\nconst {log} = experimental;\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport {makeFontAtlas, DEFAULT_CHAR_SET} from './font-atlas';\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_FONT_FAMILY = 'Monaco, monospace';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst MISSING_CHAR_WIDTH = 32;\n\nconst defaultProps = {\n  fp64: false,\n  sizeScale: 1,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  characterSet: DEFAULT_CHAR_SET,\n\n  getText: x => x.text,\n  getPosition: x => x.position,\n  getColor: x => x.color || DEFAULT_COLOR,\n  getSize: x => x.size || 32,\n  getAngle: x => x.angle || 0,\n  getTextAnchor: x => x.textAnchor || 'middle',\n  getAlignmentBaseline: x => x.alignmentBaseline || 'center',\n  getPixelOffset: x => x.offset || x.pixelOffset || [0, 0]\n};\n\nexport default class TextLayer extends CompositeLayer {\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged =\n      oldProps.fontFamily !== props.fontFamily || oldProps.characterSet !== props.characterSet;\n\n    if (fontChanged) {\n      this.updateFontAtlas(props.fontFamily, props.characterSet);\n    }\n\n    if (\n      changeFlags.dataChanged ||\n      fontChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  updateFontAtlas(fontFamily, characterSet) {\n    const {gl} = this.context;\n    const {scale, mapping, texture} = makeFontAtlas(gl, {fontFamily, characterSet});\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n  }\n\n  getPickingInfo({info}) {\n    return Object.assign(info, {\n      // override object with original data\n      object: info.object && info.object.object\n    });\n  }\n\n  transformStringToLetters() {\n    const {data, getText} = this.props;\n    const {iconMapping} = this.state;\n    if (!data || data.length === 0) {\n      return;\n    }\n    const transformedData = [];\n    data.forEach(val => {\n      const text = getText(val);\n      if (text) {\n        const letters = Array.from(text);\n        const offsets = [0];\n        let offsetLeft = 0;\n\n        letters.forEach((letter, i) => {\n          const datum = {text: letter, index: i, offsets, len: text.length, object: val};\n          const frame = iconMapping[letter];\n          if (frame) {\n            offsetLeft += frame.width;\n          } else {\n            log.warn(`Missing character: ${letter}`)();\n            offsetLeft += MISSING_CHAR_WIDTH;\n          }\n          offsets.push(offsetLeft);\n          transformedData.push(datum);\n        });\n      }\n    });\n\n    this.setState({data: transformedData});\n  }\n\n  getLetterOffset(datum) {\n    return datum.offsets[datum.index];\n  }\n\n  getTextLength(datum) {\n    return datum.offsets[datum.offsets.length - 1];\n  }\n\n  getAnchorXFromTextAnchor(textAnchor) {\n    if (!TEXT_ANCHOR.hasOwnProperty(textAnchor)) {\n      throw new Error(`Invalid text anchor parameter: ${textAnchor}`);\n    }\n    return TEXT_ANCHOR[textAnchor];\n  }\n\n  getAnchorYFromAlignmentBaseline(alignmentBaseline) {\n    if (!ALIGNMENT_BASELINE.hasOwnProperty(alignmentBaseline)) {\n      throw new Error(`Invalid alignment baseline parameter: ${alignmentBaseline}`);\n    }\n    return ALIGNMENT_BASELINE[alignmentBaseline];\n  }\n\n  renderLayers() {\n    const {data, scale, iconAtlas, iconMapping} = this.state;\n\n    if (!iconMapping || !iconAtlas || !data) {\n      return null;\n    }\n\n    const {\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      fp64,\n      sizeScale,\n      updateTriggers\n    } = this.props;\n\n    return [\n      new MultiIconLayer(\n        this.getSubLayerProps({\n          id: 'text-multi-icon-layer',\n          data,\n          iconAtlas,\n          iconMapping,\n          getIcon: d => d.text,\n          getPosition: d => getPosition(d.object),\n          getShiftInQueue: d => this.getLetterOffset(d),\n          getLengthOfQueue: d => this.getTextLength(d),\n          getColor: d => getColor(d.object),\n          getSize: d => getSize(d.object),\n          getAngle: d => getAngle(d.object),\n          getAnchorX: d => this.getAnchorXFromTextAnchor(getTextAnchor(d.object)),\n          getAnchorY: d => this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline(d.object)),\n          getPixelOffset: d => getPixelOffset(d.object),\n          fp64,\n          sizeScale: sizeScale * scale,\n          updateTriggers: {\n            getPosition: updateTriggers.getPosition,\n            getAngle: updateTriggers.getAngle,\n            getColor: updateTriggers.getColor,\n            getSize: updateTriggers.getSize,\n            getPixelOffset: updateTriggers.getPixelOffset,\n            getAnchorX: updateTriggers.getTextAnchor,\n            getAnchorY: updateTriggers.getAlignmentBaseline\n          }\n        })\n      )\n    ];\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}
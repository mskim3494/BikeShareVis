{"version":3,"sources":["../../../../src/core-layers/scatterplot-layer/scatterplot-layer.js"],"names":["Layer","experimental","fp64LowPart","enable64bitSupport","GL","Model","Geometry","vs","fs","DEFAULT_COLOR","defaultProps","radiusScale","radiusMinPixels","radiusMaxPixels","Number","MAX_SAFE_INTEGER","strokeWidth","outline","fp64","getPosition","x","position","getRadius","radius","getColor","color","ScatterplotLayer","getShaders","id","projectModule","props","modules","initializeState","state","attributeManager","addInstanced","instancePositions","size","transition","accessor","update","calculateInstancePositions","instancePositions64xyLow","calculateInstancePositions64xyLow","instanceRadius","defaultValue","calculateInstanceRadius","instanceColors","type","UNSIGNED_BYTE","calculateInstanceColors","updateState","oldProps","changeFlags","gl","context","model","delete","setState","_getModel","invalidateAll","draw","uniforms","render","Object","assign","positions","geometry","drawMode","TRIANGLE_FAN","attributes","Float32Array","isInstanced","shaderCache","attribute","data","value","i","point","isFP64","isGeneric","isNaN","layerName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,KAAR,EAAeC,YAAf,QAAkC,YAAlC;MACOC,W,GAAmCD,Y,CAAnCC,W;MAAaC,kB,GAAsBF,Y,CAAtBE,kB;AACpB,SAAQC,EAAR,EAAYC,KAAZ,EAAmBC,QAAnB,QAAkC,SAAlC;AAEA,OAAOC,EAAP,MAAe,iCAAf;AACA,OAAOC,EAAP,MAAe,mCAAf;AAEA,MAAMC,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAAtB;AAEA,MAAMC,eAAe;AACnBC,eAAa,CADM;AAEnBC,mBAAiB,CAFE;AAEC;AACpBC,mBAAiBC,OAAOC,gBAHL;AAGuB;AAC1CC,eAAa,CAJM;AAKnBC,WAAS,KALU;AAMnBC,QAAM,KANa;AAQnBC,eAAaC,KAAKA,EAAEC,QARD;AASnBC,aAAWF,KAAKA,EAAEG,MAAF,IAAY,CATT;AAUnBC,YAAUJ,KAAKA,EAAEK,KAAF,IAAWhB;AAVP,CAArB;AAaA,eAAe,MAAMiB,gBAAN,SAA+B1B,KAA/B,CAAqC;AAClD2B,aAAWC,EAAX,EAAe;AACb,UAAMC,gBAAgB1B,mBAAmB,KAAK2B,KAAxB,IAAiC,WAAjC,GAA+C,WAArE;AACA,WAAO;AAACvB,QAAD;AAAKC,QAAL;AAASuB,eAAS,CAACF,aAAD,EAAgB,SAAhB;AAAlB,KAAP;AACD;;AAEDG,oBAAkB;AAChB;AACA,SAAKC,KAAL,CAAWC,gBAAX,CAA4BC,YAA5B,CAAyC;AACvCC,yBAAmB;AACjBC,cAAM,CADW;AAEjBC,oBAAY,IAFK;AAGjBC,kBAAU,aAHO;AAIjBC,gBAAQ,KAAKC;AAJI,OADoB;AAOvCC,gCAA0B;AACxBL,cAAM,CADkB;AAExBE,kBAAU,aAFc;AAGxBC,gBAAQ,KAAKG;AAHW,OAPa;AAYvCC,sBAAgB;AACdP,cAAM,CADQ;AAEdC,oBAAY,IAFE;AAGdC,kBAAU,WAHI;AAIdM,sBAAc,CAJA;AAKdL,gBAAQ,KAAKM;AALC,OAZuB;AAmBvCC,sBAAgB;AACdV,cAAM,CADQ;AAEdC,oBAAY,IAFE;AAGdU,cAAM5C,GAAG6C,aAHK;AAIdV,kBAAU,UAJI;AAKdC,gBAAQ,KAAKU;AALC;AAnBuB,KAAzC;AA2BA;AACD;;AAEDC,cAAY;AAACrB,SAAD;AAAQsB,YAAR;AAAkBC;AAAlB,GAAZ,EAA4C;AAC1C,UAAMF,WAAN,CAAkB;AAACrB,WAAD;AAAQsB,cAAR;AAAkBC;AAAlB,KAAlB;;AACA,QAAIvB,MAAMZ,IAAN,KAAekC,SAASlC,IAA5B,EAAkC;AAAA,YACzBoC,EADyB,GACnB,KAAKC,OADc,CACzBD,EADyB;;AAEhC,UAAI,KAAKrB,KAAL,CAAWuB,KAAf,EAAsB;AACpB,aAAKvB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB;AACD;;AACD,WAAKC,QAAL,CAAc;AAACF,eAAO,KAAKG,SAAL,CAAeL,EAAf;AAAR,OAAd;AACA,WAAKrB,KAAL,CAAWC,gBAAX,CAA4B0B,aAA5B;AACD;AACF;;AAEDC,OAAK;AAACC;AAAD,GAAL,EAAiB;AAAA,mBAC+D,KAAKhC,KADpE;AAAA,UACRnB,WADQ,UACRA,WADQ;AAAA,UACKC,eADL,UACKA,eADL;AAAA,UACsBC,eADtB,UACsBA,eADtB;AAAA,UACuCI,OADvC,UACuCA,OADvC;AAAA,UACgDD,WADhD,UACgDA,WADhD;AAEf,SAAKiB,KAAL,CAAWuB,KAAX,CAAiBO,MAAjB,CACEC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,QAAlB,EAA4B;AAC1B7C,eAASA,UAAU,CAAV,GAAc,CADG;AAE1BD,iBAF0B;AAG1BL,iBAH0B;AAI1BC,qBAJ0B;AAK1BC;AAL0B,KAA5B,CADF;AASD;;AAED8C,YAAUL,EAAV,EAAc;AACZ;AACA,UAAMY,YAAY,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAC,CAAnC,EAAsC,CAAtC,CAAlB;AAEA,WAAO,IAAI7D,KAAJ,CACLiD,EADK,EAELU,OAAOC,MAAP,CAAc,KAAKtC,UAAL,EAAd,EAAiC;AAC/BC,UAAI,KAAKE,KAAL,CAAWF,EADgB;AAE/BuC,gBAAU,IAAI7D,QAAJ,CAAa;AACrB8D,kBAAUhE,GAAGiE,YADQ;AAErBC,oBAAY;AACVJ,qBAAW,IAAIK,YAAJ,CAAiBL,SAAjB;AADD;AAFS,OAAb,CAFqB;AAQ/BM,mBAAa,IARkB;AAS/BC,mBAAa,KAAKlB,OAAL,CAAakB;AATK,KAAjC,CAFK,CAAP;AAcD;;AAEDhC,6BAA2BiC,SAA3B,EAAsC;AAAA,oBACR,KAAK5C,KADG;AAAA,UAC7B6C,IAD6B,WAC7BA,IAD6B;AAAA,UACvBxD,WADuB,WACvBA,WADuB;AAAA,UAE7ByD,KAF6B,GAEpBF,SAFoB,CAE7BE,KAF6B;AAGpC,QAAIC,IAAI,CAAR;;AACA,SAAK,MAAMC,KAAX,IAAoBH,IAApB,EAA0B;AACxB,YAAMtD,WAAWF,YAAY2D,KAAZ,CAAjB;AACAF,YAAMC,GAAN,IAAaxD,SAAS,CAAT,CAAb;AACAuD,YAAMC,GAAN,IAAaxD,SAAS,CAAT,CAAb;AACAuD,YAAMC,GAAN,IAAaxD,SAAS,CAAT,KAAe,CAA5B;AACD;AACF;;AAEDsB,oCAAkC+B,SAAlC,EAA6C;AAC3C,UAAMK,SAAS5E,mBAAmB,KAAK2B,KAAxB,CAAf;AACA4C,cAAUM,SAAV,GAAsB,CAACD,MAAvB;;AAEA,QAAI,CAACA,MAAL,EAAa;AACXL,gBAAUE,KAAV,GAAkB,IAAIL,YAAJ,CAAiB,CAAjB,CAAlB;AACA;AACD;;AAP0C,oBASf,KAAKzC,KATU;AAAA,UASpC6C,IAToC,WASpCA,IAToC;AAAA,UAS9BxD,WAT8B,WAS9BA,WAT8B;AAAA,UAUpCyD,KAVoC,GAU3BF,SAV2B,CAUpCE,KAVoC;AAW3C,QAAIC,IAAI,CAAR;;AACA,SAAK,MAAMC,KAAX,IAAoBH,IAApB,EAA0B;AACxB,YAAMtD,WAAWF,YAAY2D,KAAZ,CAAjB;AACAF,YAAMC,GAAN,IAAa3E,YAAYmB,SAAS,CAAT,CAAZ,CAAb;AACAuD,YAAMC,GAAN,IAAa3E,YAAYmB,SAAS,CAAT,CAAZ,CAAb;AACD;AACF;;AAEDyB,0BAAwB4B,SAAxB,EAAmC;AAAA,oBACP,KAAK5C,KADE;AAAA,UAC1B6C,IAD0B,WAC1BA,IAD0B;AAAA,UACpBrD,SADoB,WACpBA,SADoB;AAAA,UAE1BsD,KAF0B,GAEjBF,SAFiB,CAE1BE,KAF0B;AAGjC,QAAIC,IAAI,CAAR;;AACA,SAAK,MAAMC,KAAX,IAAoBH,IAApB,EAA0B;AACxB,YAAMpD,SAASD,UAAUwD,KAAV,CAAf;AACAF,YAAMC,GAAN,IAAaI,MAAM1D,MAAN,IAAgB,CAAhB,GAAoBA,MAAjC;AACD;AACF;;AAED2B,0BAAwBwB,SAAxB,EAAmC;AAAA,oBACR,KAAK5C,KADG;AAAA,UAC1B6C,IAD0B,WAC1BA,IAD0B;AAAA,UACpBnD,QADoB,WACpBA,QADoB;AAAA,UAE1BoD,KAF0B,GAEjBF,SAFiB,CAE1BE,KAF0B;AAGjC,QAAIC,IAAI,CAAR;;AACA,SAAK,MAAMC,KAAX,IAAoBH,IAApB,EAA0B;AACxB,YAAMlD,QAAQD,SAASsD,KAAT,KAAmBrE,aAAjC;AACAmE,YAAMC,GAAN,IAAapD,MAAM,CAAN,CAAb;AACAmD,YAAMC,GAAN,IAAapD,MAAM,CAAN,CAAb;AACAmD,YAAMC,GAAN,IAAapD,MAAM,CAAN,CAAb;AACAmD,YAAMC,GAAN,IAAaI,MAAMxD,MAAM,CAAN,CAAN,IAAkB,GAAlB,GAAwBA,MAAM,CAAN,CAArC;AACD;AACF;;AAvIiD;AA0IpDC,iBAAiBwD,SAAjB,GAA6B,kBAA7B;AACAxD,iBAAiBhB,YAAjB,GAAgCA,YAAhC","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, experimental} from '../../core';\nconst {fp64LowPart, enable64bitSupport} = experimental;\nimport {GL, Model, Geometry} from 'luma.gl';\n\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  radiusScale: 1,\n  radiusMinPixels: 0, //  min point radius in pixels\n  radiusMaxPixels: Number.MAX_SAFE_INTEGER, // max point radius in pixels\n  strokeWidth: 1,\n  outline: false,\n  fp64: false,\n\n  getPosition: x => x.position,\n  getRadius: x => x.radius || 1,\n  getColor: x => x.color || DEFAULT_COLOR\n};\n\nexport default class ScatterplotLayer extends Layer {\n  getShaders(id) {\n    const projectModule = enable64bitSupport(this.props) ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    /* eslint-disable max-len */\n    this.state.attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions\n      },\n      instancePositions64xyLow: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1,\n        update: this.calculateInstanceRadius\n      },\n      instanceColors: {\n        size: 4,\n        transition: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        update: this.calculateInstanceColors\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.state.attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {radiusScale, radiusMinPixels, radiusMaxPixels, outline, strokeWidth} = this.props;\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        outline: outline ? 1 : 0,\n        strokeWidth,\n        radiusScale,\n        radiusMinPixels,\n        radiusMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    // a square that minimally cover the unit circle\n    const positions = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\n    return new Model(\n      gl,\n      Object.assign(this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateInstancePositions(attribute) {\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = position[0];\n      value[i++] = position[1];\n      value[i++] = position[2] || 0;\n    }\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = enable64bitSupport(this.props);\n    attribute.isGeneric = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n\n  calculateInstanceRadius(attribute) {\n    const {data, getRadius} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const radius = getRadius(point);\n      value[i++] = isNaN(radius) ? 1 : radius;\n    }\n  }\n\n  calculateInstanceColors(attribute) {\n    const {data, getColor} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const color = getColor(point) || DEFAULT_COLOR;\n      value[i++] = color[0];\n      value[i++] = color[1];\n      value[i++] = color[2];\n      value[i++] = isNaN(color[3]) ? 255 : color[3];\n    }\n  }\n}\n\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n"],"file":"scatterplot-layer.js"}
{"version":3,"sources":["../../../../src/core/transitions/viewport-fly-to-interpolator.js"],"names":["TransitionInterpolator","isValid","getEndValueByShortestPath","lerp","flyToViewport","assert","VIEWPORT_TRANSITION_PROPS","REQUIRED_PROPS","LINEARLY_INTERPOLATED_PROPS","ViewportFlyToInterpolator","constructor","propNames","initializeProps","startProps","endProps","startViewportProps","endViewportProps","key","startValue","endValue","start","end","interpolateProps","t","viewport"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,2BAAnC;AACA,SAAQC,OAAR,EAAiBC,yBAAjB,QAAiD,oBAAjD;AACA,SAAQC,IAAR,QAAmB,uBAAnB;AAEA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,4BAA4B,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,OAA7C,CAAlC;AACA,MAAMC,iBAAiB,CAAC,UAAD,EAAa,WAAb,EAA0B,MAA1B,EAAkC,OAAlC,EAA2C,QAA3C,CAAvB;AACA,MAAMC,8BAA8B,CAAC,SAAD,EAAY,OAAZ,CAApC;AAEA;;;;;;;;AAOA,eAAe,MAAMC,yBAAN,SAAwCT,sBAAxC,CAA+D;AAC5EU,gBAAc;AACZ;AACA,SAAKC,SAAL,GAAiBL,yBAAjB;AACD;;AAEDM,kBAAgBC,UAAhB,EAA4BC,QAA5B,EAAsC;AACpC,UAAMC,qBAAqB,EAA3B;AACA,UAAMC,mBAAmB,EAAzB,CAFoC,CAIpC;;AACA,SAAK,MAAMC,GAAX,IAAkBV,cAAlB,EAAkC;AAChC,YAAMW,aAAaL,WAAWI,GAAX,CAAnB;AACA,YAAME,WAAWL,SAASG,GAAT,CAAjB;AACAZ,aAAOJ,QAAQiB,UAAR,KAAuBjB,QAAQkB,QAAR,CAA9B,EAAkD,GAAEF,GAAI,kCAAxD;AACAF,yBAAmBE,GAAnB,IAA0BC,UAA1B;AACAF,uBAAiBC,GAAjB,IAAwBf,0BAA0Be,GAA1B,EAA+BC,UAA/B,EAA2CC,QAA3C,CAAxB;AACD;;AAED,SAAK,MAAMF,GAAX,IAAkBT,2BAAlB,EAA+C;AAC7C,YAAMU,aAAaL,WAAWI,GAAX,KAAmB,CAAtC;AACA,YAAME,WAAWL,SAASG,GAAT,KAAiB,CAAlC;AACAF,yBAAmBE,GAAnB,IAA0BC,UAA1B;AACAF,uBAAiBC,GAAjB,IAAwBf,0BAA0Be,GAA1B,EAA+BC,UAA/B,EAA2CC,QAA3C,CAAxB;AACD;;AAED,WAAO;AACLC,aAAOL,kBADF;AAELM,WAAKL;AAFA,KAAP;AAID;;AAEDM,mBAAiBT,UAAjB,EAA6BC,QAA7B,EAAuCS,CAAvC,EAA0C;AACxC,UAAMC,WAAWpB,cAAcS,UAAd,EAA0BC,QAA1B,EAAoCS,CAApC,CAAjB,CADwC,CAGxC;;AACA,SAAK,MAAMN,GAAX,IAAkBT,2BAAlB,EAA+C;AAC7CgB,eAASP,GAAT,IAAgBd,KAAKU,WAAWI,GAAX,CAAL,EAAsBH,SAASG,GAAT,CAAtB,EAAqCM,CAArC,CAAhB;AACD;;AAED,WAAOC,QAAP;AACD;;AAzC2E","sourcesContent":["import TransitionInterpolator from './transition-interpolator';\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\nimport {lerp} from './../utils/math-utils';\n\nimport {flyToViewport} from 'viewport-mercator-project';\nimport assert from '../utils/assert';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nconst LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\n\n/**\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\n * react/redux architecture.\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default class ViewportFlyToInterpolator extends TransitionInterpolator {\n  constructor() {\n    super();\n    this.propNames = VIEWPORT_TRANSITION_PROPS;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    // Check minimum required props\n    for (const key of REQUIRED_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      const startValue = startProps[key] || 0;\n      const endValue = endProps[key] || 0;\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = flyToViewport(startProps, endProps, t);\n\n    // Linearly interpolate 'bearing' and 'pitch' if exist.\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    return viewport;\n  }\n}\n"],"file":"viewport-fly-to-interpolator.js"}
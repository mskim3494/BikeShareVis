{"version":3,"sources":["../../../../src/core/lib/deck.js"],"names":["LayerManager","EffectManager","Effect","log","EventManager","GL","AnimationLoop","createGLContext","setParameters","Stats","assert","noop","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","controller","effects","arrayOf","instanceOf","glOptions","gl","pickingRadius","onWebGLInitialized","onResize","onBeforeRender","onAfterRender","onLayerClick","onLayerHover","useDevicePixels","bool","debug","drawPickingColors","defaultProps","Deck","constructor","props","Object","assign","needsRedraw","layerManager","effectManager","stats","_onRendererInitialized","bind","_onRenderFrame","canvas","_createCanvas","_createController","animationLoop","_createAnimationLoop","setProps","start","finalize","stop","timeStart","_setCanvasSize","newProps","_getViewState","timeEnd","pickObject","x","y","radius","layerIds","selectedInfos","mode","length","pickObjects","infos","getViewports","document","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","_updateCanvasSize","_checkForCanvasSizeChange","clientWidth","clientHeight","Controller","autoResizeDrawingBuffer","onCreateContext","opts","onInitialize","onRender","blend","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","polygonOffsetFill","depthTest","depthFunc","LEQUAL","eventManager","effect","addEffect","oneSecondPassed","table","getStatsTable","reset","updateLayers","bump","redrawReason","clearRedrawFlags","drawLayers","pass","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from '../lib/layer-manager';\nimport EffectManager from '../experimental/lib/effect-manager';\nimport Effect from '../experimental/lib/effect';\nimport log from '../utils/log';\n\nimport {EventManager} from 'mjolnir.js';\nimport {GL, AnimationLoop, createGLContext, setParameters} from 'luma.gl';\nimport {Stats} from 'probe.gl';\n\nimport assert from '../utils/assert';\n/* global document */\n\nfunction noop() {}\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    controller: PropTypes.func,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n\n    // GL settings\n    glOptions: PropTypes.object,\n    gl: PropTypes.object,\n    pickingRadius: PropTypes.number,\n\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLayerClick: PropTypes.func,\n    onLayerHover: PropTypes.func,\n    useDevicePixels: PropTypes.bool,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n\n  onWebGLInitialized: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLayerClick: null,\n  onLayerHover: null,\n  useDevicePixels: true,\n\n  debug: false,\n  drawPickingColors: false\n};\n\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n    this.needsRedraw = true;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.controller = null;\n    this.stats = new Stats({id: 'deck.gl'});\n\n    // Bind methods\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n\n    this.canvas = this._createCanvas(props);\n    this.controller = this._createController(props);\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.controller) {\n      this.controller.finalize();\n      this.controller = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.timeStart('deck.setProps');\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      viewState: this._getViewState(props),\n      width: this.width,\n      height: this.height\n    });\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setParameters(newProps);\n    }\n\n    // Update animation loop TODO - unify setParameters/setOptions/setProps etc naming.\n    this.animationLoop.setProps(newProps);\n\n    // Update controller props\n    if (this.controller) {\n      this.controller.setProps(newProps);\n    }\n    this.stats.timeEnd('deck.setProps');\n  }\n\n  // Public API\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.timeStart('deck.pickObject');\n    const selectedInfos = this.layerManager.pickObject({x, y, radius, layerIds, mode: 'query'});\n    this.stats.timeEnd('deck.pickObject');\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.timeStart('deck.pickObjects');\n    const infos = this.layerManager.pickObjects({x, y, width, height, layerIds});\n    this.stats.timeEnd('deck.pickObjects');\n    return infos;\n  }\n\n  getViewports() {\n    return this.layerManager ? this.layerManager.getViewports() : [];\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    const {canvas} = this;\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.layerManager.setParameters({width, height});\n      if (this.controller) {\n        this.controller.setProps({\n          viewState: this._getViewState(this.props),\n          width: this.width,\n          height: this.height\n        });\n      }\n      if (this.props.onResize) {\n        this.props.onResize({width: this.width, height: this.height});\n      }\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (canvas && (this.width !== canvas.clientWidth || this.height !== canvas.clientHeight)) {\n      this.width = canvas.clientWidth;\n      this.height = canvas.clientHeight;\n      return true;\n    }\n    return false;\n  }\n\n  // Note: props.controller must be a class constructor, not an already created instance\n  _createController(props) {\n    const Controller = props.controller;\n    if (Controller) {\n      return new Controller(\n        Object.assign({}, this._getViewState(props), props, {\n          canvas: this.canvas\n        })\n      );\n    }\n    return null;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      onCreateContext: opts =>\n        gl || createGLContext(Object.assign({}, glOptions, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  _getViewState(props) {\n    return Object.assign({}, props.viewState || {}, {\n      width: this.width,\n      height: this.height\n    });\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl, canvas}) {\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      eventManager: new EventManager(canvas),\n      stats: this.stats\n    });\n\n    this.effectManager = new EffectManager({gl, layerManager: this.layerManager});\n\n    for (const effect of this.props.effects) {\n      this.effectManager.addEffect(effect);\n    }\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n  }\n\n  _onRenderFrame({gl}) {\n    if (this.stats.oneSecondPassed()) {\n      const table = this.stats.getStatsTable();\n      this.stats.reset();\n      log.table(1, table)();\n    }\n\n    this._updateCanvasSize();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    this.layerManager.updateLayers();\n\n    this.stats.bump('fps');\n\n    const redrawReason = this.layerManager.needsRedraw({clearRedrawFlags: true});\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.bump('render-fps');\n\n    if (this.props.onBeforeRender) {\n      this.props.onBeforeRender({gl}); // TODO - should be called by AnimationLoop\n    }\n    this.layerManager.drawLayers({\n      pass: 'screen',\n      redrawReason,\n      // Helps debug layer picking, especially in framebuffer powered layers\n      drawPickingColors: this.props.drawPickingColors\n    });\n    if (this.props.onAfterRender) {\n      this.props.onAfterRender({gl}); // TODO - should be called by AnimationLoop\n    }\n  }\n}\n\nDeck.displayName = 'Deck';\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}
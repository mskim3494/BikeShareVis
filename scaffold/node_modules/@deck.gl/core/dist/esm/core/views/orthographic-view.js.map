{"version":3,"sources":["../../../../src/core/views/orthographic-view.js"],"names":["View","Viewport","Matrix4","OrthographicView","x","y","width","height","viewState","eye","lookAt","up","props","left","top","near","far","right","bottom","Number","isFinite","viewMatrix","projectionMatrix","ortho","displayName"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAAQC,OAAR,QAAsB,SAAtB;;IAEqBC,gB;;;;;;;;;;;;;uCAC4B;AAAA,UAAjCC,CAAiC,QAAjCA,CAAiC;AAAA,UAA9BC,CAA8B,QAA9BA,CAA8B;AAAA,UAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,UAApBC,MAAoB,QAApBA,MAAoB;AAAA,UAAZC,SAAY,QAAZA,SAAY;AAC7C;AAD6C,2BAOzCA,SAPyC,CAI3CC,GAJ2C;AAAA,UAI3CA,GAJ2C,+BAIrC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJqC;AAAA,8BAOzCD,SAPyC,CAK3CE,MAL2C;AAAA,UAK3CA,MAL2C,kCAKlC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALkC;AAAA,0BAOzCF,SAPyC,CAM3CG,EAN2C;AAAA,UAM3CA,EAN2C,8BAMtC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANsC,kBAS7C;;AACAL,cAAQA,SAAS,CAAjB;AACAC,eAASA,UAAU,CAAnB,CAX6C,CAa7C;AACA;;AAd6C,mBAsBzC,KAAKK,KAtBoC;AAAA,+BAiB3CC,IAjB2C;AAAA,UAiB3CA,IAjB2C,4BAiBpC,CAACP,KAAD,GAAS,CAjB2B;AAAA,8BAkB3CQ,GAlB2C;AAAA,UAkB3CA,GAlB2C,2BAkBrC,CAACP,MAAD,GAAU,CAlB2B;AAAA,+BAoB3CQ,IApB2C;AAAA,UAoB3CA,IApB2C,4BAoBpC,CApBoC;AAAA,8BAqB3CC,GArB2C;AAAA,UAqB3CA,GArB2C,2BAqBrC,GArBqC;AAAA,oBA2BzC,KAAKJ,KA3BoC;AAAA,kCAyB3CK,KAzB2C;AAAA,UAyB3CA,KAzB2C,8BAyBnC,IAzBmC;AAAA,mCA0B3CC,MA1B2C;AAAA,UA0B3CA,MA1B2C,+BA0BlC,IA1BkC;AA6B7CD,cAAQE,OAAOC,QAAP,CAAgBH,KAAhB,IAAyBA,KAAzB,GAAiCJ,OAAOP,KAAhD;AACAY,eAASC,OAAOC,QAAP,CAAgBF,MAAhB,IAA0BA,MAA1B,GAAmCJ,MAAMP,MAAlD;AAEA,aAAO,IAAIN,QAAJ,CAAa;AAClBG,YADkB;AAElBC,YAFkB;AAGlBC,oBAHkB;AAIlBC,sBAJkB;AAKlBc,oBAAY,IAAInB,OAAJ,GAAcQ,MAAd,CAAqB;AAACD,kBAAD;AAAMC,wBAAN;AAAcC;AAAd,SAArB,CALM;AAMlBW,0BAAkB,IAAIpB,OAAJ,GAAcqB,KAAd,CAAoB;AAACV,oBAAD;AAAOI,sBAAP;AAAcC,wBAAd;AAAsBJ,kBAAtB;AAA2BC,oBAA3B;AAAiCC;AAAjC,SAApB;AANA,OAAb,CAAP;AAQD;;;;EAzC2ChB,I;;SAAzBG,gB;AA4CrBA,iBAAiBqB,WAAjB,GAA+B,kBAA/B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\n\nimport {Matrix4} from 'math.gl';\n\nexport default class OrthographicView extends View {\n  _getViewport({x, y, width, height, viewState}) {\n    // Get view matrix parameters from view state\n    const {\n      // view matrix arguments\n      eye = [0, 0, 1], // Defines eye position\n      lookAt = [0, 0, 0], // Which point is camera looking at, default origin\n      up = [0, 1, 0] // Defines up direction, default positive y axis\n    } = viewState;\n\n    // Make sure Matrix4.ortho doesn't crash on 0 width/height\n    width = width || 1;\n    height = height || 1;\n\n    // Get projection matrix parameters from the view itself\n    // NOTE: automatically calculated from width and height if not provided\n    const {\n      // projection matrix arguments\n      left = -width / 2, // Left bound of the frustum\n      top = -height / 2, // Top bound of the frustum\n\n      near = 1, // Distance of near clipping plane\n      far = 100 // Distance of far clipping plane\n    } = this.props;\n\n    let {\n      right = null, // Right bound of the frustum\n      bottom = null // Bottom bound of the frustum\n    } = this.props;\n\n    right = Number.isFinite(right) ? right : left + width;\n    bottom = Number.isFinite(bottom) ? bottom : top + height;\n\n    return new Viewport({\n      x,\n      y,\n      width,\n      height,\n      viewMatrix: new Matrix4().lookAt({eye, lookAt, up}),\n      projectionMatrix: new Matrix4().ortho({left, right, bottom, top, near, far})\n    });\n  }\n}\n\nOrthographicView.displayName = 'OrthographicView';\n"],"file":"orthographic-view.js"}
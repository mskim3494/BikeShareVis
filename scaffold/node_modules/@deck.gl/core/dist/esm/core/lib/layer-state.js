function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

import assert from '../utils/assert';

var LayerState = function LayerState(_ref) {
  var attributeManager = _ref.attributeManager;

  _classCallCheck(this, LayerState);

  assert(attributeManager);
  this.attributeManager = attributeManager;
  this.model = null;
  this.needsRedraw = true;
  this.subLayers = null; // reference to sublayers rendered in a previous cycle
};

export { LayerState as default };
//# sourceMappingURL=layer-state.js.map
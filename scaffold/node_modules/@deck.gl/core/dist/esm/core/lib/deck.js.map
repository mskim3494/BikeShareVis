{"version":3,"sources":["../../../../src/core/lib/deck.js"],"names":["LayerManager","EffectManager","Effect","log","EventManager","GL","AnimationLoop","createGLContext","setParameters","Stats","assert","noop","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","controller","effects","arrayOf","instanceOf","glOptions","gl","pickingRadius","onWebGLInitialized","onResize","onBeforeRender","onAfterRender","onLayerClick","onLayerHover","useDevicePixels","bool","debug","drawPickingColors","defaultProps","Deck","props","Object","assign","needsRedraw","layerManager","effectManager","stats","_onRendererInitialized","bind","_onRenderFrame","canvas","_createCanvas","_createController","animationLoop","_createAnimationLoop","setProps","start","stop","finalize","timeStart","_setCanvasSize","newProps","_getViewState","timeEnd","x","y","radius","layerIds","selectedInfos","pickObject","mode","length","infos","pickObjects","getViewports","document","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","_checkForCanvasSizeChange","clientWidth","clientHeight","Controller","autoResizeDrawingBuffer","onCreateContext","onInitialize","onRender","blend","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","polygonOffsetFill","depthTest","depthFunc","LEQUAL","eventManager","effect","addEffect","_updateCanvasSize","oneSecondPassed","table","getStatsTable","reset","updateLayers","bump","redrawReason","clearRedrawFlags","drawLayers","pass","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from '../lib/layer-manager';\nimport EffectManager from '../experimental/lib/effect-manager';\nimport Effect from '../experimental/lib/effect';\nimport log from '../utils/log';\n\nimport {EventManager} from 'mjolnir.js';\nimport {GL, AnimationLoop, createGLContext, setParameters} from 'luma.gl';\nimport {Stats} from 'probe.gl';\n\nimport assert from '../utils/assert';\n/* global document */\n\nfunction noop() {}\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    controller: PropTypes.func,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n\n    // GL settings\n    glOptions: PropTypes.object,\n    gl: PropTypes.object,\n    pickingRadius: PropTypes.number,\n\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLayerClick: PropTypes.func,\n    onLayerHover: PropTypes.func,\n    useDevicePixels: PropTypes.bool,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n\n  onWebGLInitialized: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLayerClick: null,\n  onLayerHover: null,\n  useDevicePixels: true,\n\n  debug: false,\n  drawPickingColors: false\n};\n\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n    this.needsRedraw = true;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.controller = null;\n    this.stats = new Stats({id: 'deck.gl'});\n\n    // Bind methods\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n\n    this.canvas = this._createCanvas(props);\n    this.controller = this._createController(props);\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.controller) {\n      this.controller.finalize();\n      this.controller = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.timeStart('deck.setProps');\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      viewState: this._getViewState(props),\n      width: this.width,\n      height: this.height\n    });\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setParameters(newProps);\n    }\n\n    // Update animation loop TODO - unify setParameters/setOptions/setProps etc naming.\n    this.animationLoop.setProps(newProps);\n\n    // Update controller props\n    if (this.controller) {\n      this.controller.setProps(newProps);\n    }\n    this.stats.timeEnd('deck.setProps');\n  }\n\n  // Public API\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.timeStart('deck.pickObject');\n    const selectedInfos = this.layerManager.pickObject({x, y, radius, layerIds, mode: 'query'});\n    this.stats.timeEnd('deck.pickObject');\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.timeStart('deck.pickObjects');\n    const infos = this.layerManager.pickObjects({x, y, width, height, layerIds});\n    this.stats.timeEnd('deck.pickObjects');\n    return infos;\n  }\n\n  getViewports() {\n    return this.layerManager ? this.layerManager.getViewports() : [];\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    const {canvas} = this;\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.layerManager.setParameters({width, height});\n      if (this.controller) {\n        this.controller.setProps({\n          viewState: this._getViewState(this.props),\n          width: this.width,\n          height: this.height\n        });\n      }\n      if (this.props.onResize) {\n        this.props.onResize({width: this.width, height: this.height});\n      }\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (canvas && (this.width !== canvas.clientWidth || this.height !== canvas.clientHeight)) {\n      this.width = canvas.clientWidth;\n      this.height = canvas.clientHeight;\n      return true;\n    }\n    return false;\n  }\n\n  // Note: props.controller must be a class constructor, not an already created instance\n  _createController(props) {\n    const Controller = props.controller;\n    if (Controller) {\n      return new Controller(\n        Object.assign({}, this._getViewState(props), props, {\n          canvas: this.canvas\n        })\n      );\n    }\n    return null;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      onCreateContext: opts =>\n        gl || createGLContext(Object.assign({}, glOptions, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  _getViewState(props) {\n    return Object.assign({}, props.viewState || {}, {\n      width: this.width,\n      height: this.height\n    });\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl, canvas}) {\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      eventManager: new EventManager(canvas),\n      stats: this.stats\n    });\n\n    this.effectManager = new EffectManager({gl, layerManager: this.layerManager});\n\n    for (const effect of this.props.effects) {\n      this.effectManager.addEffect(effect);\n    }\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n  }\n\n  _onRenderFrame({gl}) {\n    if (this.stats.oneSecondPassed()) {\n      const table = this.stats.getStatsTable();\n      this.stats.reset();\n      log.table(1, table)();\n    }\n\n    this._updateCanvasSize();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    this.layerManager.updateLayers();\n\n    this.stats.bump('fps');\n\n    const redrawReason = this.layerManager.needsRedraw({clearRedrawFlags: true});\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.bump('render-fps');\n\n    if (this.props.onBeforeRender) {\n      this.props.onBeforeRender({gl}); // TODO - should be called by AnimationLoop\n    }\n    this.layerManager.drawLayers({\n      pass: 'screen',\n      redrawReason,\n      // Helps debug layer picking, especially in framebuffer powered layers\n      drawPickingColors: this.props.drawPickingColors\n    });\n    if (this.props.onAfterRender) {\n      this.props.onAfterRender({gl}); // TODO - should be called by AnimationLoop\n    }\n  }\n}\n\nDeck.displayName = 'Deck';\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}